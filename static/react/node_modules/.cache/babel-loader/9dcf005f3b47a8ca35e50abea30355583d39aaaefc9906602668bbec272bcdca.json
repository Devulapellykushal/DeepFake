{"ast":null,"code":"var _jsxFileName = \"/Users/devulapellykushalkumarreddy/Downloads/PS-1/static/react/src/components/Squares.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport './Squares.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Squares = ({\n  direction = 'right',\n  speed = 1,\n  borderColor = '#999',\n  squareSize = 40,\n  hoverFillColor = '#222',\n  className = ''\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const requestRef = useRef(null);\n  const numSquaresX = useRef();\n  const numSquaresY = useRef();\n  const gridOffset = useRef({\n    x: 0,\n    y: 0\n  });\n  const hoveredSquare = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const resizeCanvas = () => {\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n      numSquaresX.current = Math.ceil(canvas.width / squareSize) + 1;\n      numSquaresY.current = Math.ceil(canvas.height / squareSize) + 1;\n    };\n    window.addEventListener('resize', resizeCanvas);\n    resizeCanvas();\n    const drawGrid = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const startX = Math.floor(gridOffset.current.x / squareSize) * squareSize;\n      const startY = Math.floor(gridOffset.current.y / squareSize) * squareSize;\n      for (let x = startX; x < canvas.width + squareSize; x += squareSize) {\n        for (let y = startY; y < canvas.height + squareSize; y += squareSize) {\n          const squareX = x - gridOffset.current.x % squareSize;\n          const squareY = y - gridOffset.current.y % squareSize;\n          if (hoveredSquare.current && Math.floor((x - startX) / squareSize) === hoveredSquare.current.x && Math.floor((y - startY) / squareSize) === hoveredSquare.current.y) {\n            ctx.fillStyle = hoverFillColor;\n            ctx.fillRect(squareX, squareY, squareSize, squareSize);\n          }\n          ctx.strokeStyle = borderColor;\n          ctx.strokeRect(squareX, squareY, squareSize, squareSize);\n        }\n      }\n      const gradient = ctx.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, Math.sqrt(canvas.width ** 2 + canvas.height ** 2) / 2);\n      gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      // gradient.addColorStop(1, '#060606'); // uncomment for gradient\n\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    };\n    const updateAnimation = () => {\n      const effectiveSpeed = Math.max(speed, 0.1);\n      switch (direction) {\n        case 'right':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'left':\n          gridOffset.current.x = (gridOffset.current.x + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'up':\n          gridOffset.current.y = (gridOffset.current.y + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'down':\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'diagonal':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        default:\n          break;\n      }\n      drawGrid();\n      requestRef.current = requestAnimationFrame(updateAnimation);\n    };\n    const handleMouseMove = event => {\n      const rect = canvas.getBoundingClientRect();\n      const mouseX = event.clientX - rect.left;\n      const mouseY = event.clientY - rect.top;\n      const startX = Math.floor(gridOffset.current.x / squareSize) * squareSize;\n      const startY = Math.floor(gridOffset.current.y / squareSize) * squareSize;\n      const hoveredSquareX = Math.floor((mouseX + gridOffset.current.x - startX) / squareSize);\n      const hoveredSquareY = Math.floor((mouseY + gridOffset.current.y - startY) / squareSize);\n      if (!hoveredSquare.current || hoveredSquare.current.x !== hoveredSquareX || hoveredSquare.current.y !== hoveredSquareY) {\n        hoveredSquare.current = {\n          x: hoveredSquareX,\n          y: hoveredSquareY\n        };\n      }\n    };\n    const handleMouseLeave = () => {\n      hoveredSquare.current = null;\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n    requestRef.current = requestAnimationFrame(updateAnimation);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(requestRef.current);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [direction, speed, borderColor, hoverFillColor, squareSize]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: `squares-canvas ${className}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 10\n  }, this);\n};\n_s(Squares, \"qkn3KbMXXUWZdBX/BUEU/EkjTvI=\");\n_c = Squares;\nexport default Squares;\nvar _c;\n$RefreshReg$(_c, \"Squares\");","map":{"version":3,"names":["useEffect","useRef","jsxDEV","_jsxDEV","Squares","direction","speed","borderColor","squareSize","hoverFillColor","className","_s","canvasRef","requestRef","numSquaresX","numSquaresY","gridOffset","x","y","hoveredSquare","canvas","current","ctx","getContext","resizeCanvas","width","offsetWidth","height","offsetHeight","Math","ceil","window","addEventListener","drawGrid","clearRect","startX","floor","startY","squareX","squareY","fillStyle","fillRect","strokeStyle","strokeRect","gradient","createRadialGradient","sqrt","addColorStop","updateAnimation","effectiveSpeed","max","requestAnimationFrame","handleMouseMove","event","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","hoveredSquareX","hoveredSquareY","handleMouseLeave","removeEventListener","cancelAnimationFrame","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/PS-1/static/react/src/components/Squares.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport './Squares.css';\n\nconst Squares = ({\n  direction = 'right',\n  speed = 1,\n  borderColor = '#999',\n  squareSize = 40,\n  hoverFillColor = '#222',\n  className = ''\n}) => {\n  const canvasRef = useRef(null);\n  const requestRef = useRef(null);\n  const numSquaresX = useRef();\n  const numSquaresY = useRef();\n  const gridOffset = useRef({ x: 0, y: 0 });\n  const hoveredSquare = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const resizeCanvas = () => {\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n      numSquaresX.current = Math.ceil(canvas.width / squareSize) + 1;\n      numSquaresY.current = Math.ceil(canvas.height / squareSize) + 1;\n    };\n\n    window.addEventListener('resize', resizeCanvas);\n    resizeCanvas();\n\n    const drawGrid = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      const startX = Math.floor(gridOffset.current.x / squareSize) * squareSize;\n      const startY = Math.floor(gridOffset.current.y / squareSize) * squareSize;\n\n      for (let x = startX; x < canvas.width + squareSize; x += squareSize) {\n        for (let y = startY; y < canvas.height + squareSize; y += squareSize) {\n          const squareX = x - (gridOffset.current.x % squareSize);\n          const squareY = y - (gridOffset.current.y % squareSize);\n\n          if (\n            hoveredSquare.current &&\n            Math.floor((x - startX) / squareSize) === hoveredSquare.current.x &&\n            Math.floor((y - startY) / squareSize) === hoveredSquare.current.y\n          ) {\n            ctx.fillStyle = hoverFillColor;\n            ctx.fillRect(squareX, squareY, squareSize, squareSize);\n          }\n\n          ctx.strokeStyle = borderColor;\n          ctx.strokeRect(squareX, squareY, squareSize, squareSize);\n        }\n      }\n\n      const gradient = ctx.createRadialGradient(\n        canvas.width / 2,\n        canvas.height / 2,\n        0,\n        canvas.width / 2,\n        canvas.height / 2,\n        Math.sqrt(canvas.width ** 2 + canvas.height ** 2) / 2\n      );\n      gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      // gradient.addColorStop(1, '#060606'); // uncomment for gradient\n\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    const updateAnimation = () => {\n      const effectiveSpeed = Math.max(speed, 0.1);\n      switch (direction) {\n        case 'right':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'left':\n          gridOffset.current.x = (gridOffset.current.x + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'up':\n          gridOffset.current.y = (gridOffset.current.y + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'down':\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'diagonal':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        default:\n          break;\n      }\n\n      drawGrid();\n      requestRef.current = requestAnimationFrame(updateAnimation);\n    };\n\n    const handleMouseMove = (event) => {\n      const rect = canvas.getBoundingClientRect();\n      const mouseX = event.clientX - rect.left;\n      const mouseY = event.clientY - rect.top;\n\n      const startX = Math.floor(gridOffset.current.x / squareSize) * squareSize;\n      const startY = Math.floor(gridOffset.current.y / squareSize) * squareSize;\n\n      const hoveredSquareX = Math.floor((mouseX + gridOffset.current.x - startX) / squareSize);\n      const hoveredSquareY = Math.floor((mouseY + gridOffset.current.y - startY) / squareSize);\n\n      if (\n        !hoveredSquare.current ||\n        hoveredSquare.current.x !== hoveredSquareX ||\n        hoveredSquare.current.y !== hoveredSquareY\n      ) {\n        hoveredSquare.current = { x: hoveredSquareX, y: hoveredSquareY };\n      }\n    };\n\n    const handleMouseLeave = () => {\n      hoveredSquare.current = null;\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    requestRef.current = requestAnimationFrame(updateAnimation);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(requestRef.current);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [direction, speed, borderColor, hoverFillColor, squareSize]);\n\n  return <canvas ref={canvasRef} className={`squares-canvas ${className}`}></canvas>;\n};\n\nexport default Squares; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}